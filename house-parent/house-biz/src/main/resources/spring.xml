<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
">

    <context:component-scan base-package="com.bobo">
        <!--排除controller-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--引入外部配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--配置druid数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    <!--配置SqlSessionFactoryBean-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <!--注入mybaits.xml-->
        <property name="configLocation" value="classpath:mybatis.xml"></property>
        <!--注入映射文件-->
        <property name="mapperLocations" value="classpath:/mappers/*.xml"></property>

    </bean>

    <!--dao层接口扫描 产生接口代理对象在IOC 中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--dao层接口所在包-->
        <property name="basePackage" value="com.bobo.mapper"></property>
    </bean>
    <!--开启aop的自动代理-->
    <aop:aspectj-autoproxy/>

    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
   <!-- &lt;!&ndash;事务&ndash;&gt;
    <tx:advice transaction-manager="transactionManager" id="txAdvice">
     <tx:attributes>
         &lt;!&ndash;如果是查询的方法 ,则配置只读事务,目的是提高查询效率&ndash;&gt;
         <tx:method name="get*" read-only="true"></tx:method>
         <tx:method name="list*" read-only="true"></tx:method>
         <tx:method name="select*" read-only="true"></tx:method>
         <tx:method name="login*" read-only="true"></tx:method>
         <tx:method name="find*" read-only="true"></tx:method>
          &lt;!&ndash;其他使用默认事务&ndash;&gt;
         <tx:method name="*" />
     </tx:attributes>

    </tx:advice>
    &lt;!&ndash;配置事务&ndash;&gt;
    <aop:config>
        &lt;!&ndash;切点表达式&ndash;&gt;
        <aop:pointcut id="pt" expression="execution(* com.bobo.service.impl.*.*(..) )"/>
        &lt;!&ndash;增强&ndash;&gt;
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt"></aop:advisor>
    </aop:config>
-->

    <!--开启事务注解驱动-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--引入spring-re dis.xml-->
  <!--  <import resource="classpath:spring-redis.xml"></import>-->
</beans>
